name: scheduled-workflow

on:
  workflow_dispatch:


jobs:
  
  test-content-localization-dev-us-west-2:
    needs: deploy-content-localization-dev-us-west-2
    runs-on: ubuntu-latest
    env:
      MIE_REGION: 'us-west-2'
    steps:
      - name: Check out development branch
        uses: actions/checkout@v2.3.4
        with:
          ref: development

      - name: Initialize test AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
            aws-access-key-id: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
            aws-region: us-west-2

      - name: Generate short sha
        run: |
          echo "CONTENT_LOCALIZATION_STACK_NAME=cl" >> $GITHUB_ENV
          echo "MIE_STACK_NAME=mi" >> $GITHUB_ENV
      - name: Run cfn_nag
        uses: stelligent/cfn_nag@master
        continue-on-error: true
        with:
            input_path: deployment

      # - name: Run unit tests
      #   run: |
      #     cd $GITHUB_WORKSPACE
      #     cd test/unit
      #     ./run_unit.sh workflowapi
      #     ./run_unit.sh dataplaneapi

      # - name: Run integ tests
      #   run: |
      #     cd $GITHUB_WORKSPACE
      #     cd test/integ
      #     ./run_integ.sh
      - name: Initialize build AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.BUILD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.BUILD_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
      - name: Setup Chromedriver
        uses: nanasess/setup-chromedriver@master
      - name: Get user pool id
        run: |
          echo "USER_POOL_ID=`aws cloudformation describe-stacks --query 'Stacks[?starts_with(StackName, \`cl-ContentAnalysisAuthStack\`)].Outputs[1].OutputValue' --output text`" >> $GITHUB_ENV
      - name: Reset CL user password
        run: |
          aws cognito-idp admin-set-user-password --user-pool-id $USER_POOL_ID --username ${{ secrets.TEST_ADMIN_EMAIL }} --password ${{ secrets.TEST_ADMIN_PASSWORD }} --permanent
      - name: Get Content Localization endpoint
        run: |
          echo "USE_EXISTING_WORKFLOW=True" >> $GITHUB_ENV  
          
      - name: Get Content Localization endpoint
        run: |
          echo "APP_ENDPOINT=`aws cloudformation describe-stacks --query 'Stacks[?starts_with(StackName, \`cl-ContentAnalysisWebStack\`)].Outputs[0].OutputValue' --output text`" >> $GITHUB_ENV
      - name: Set admin creds
        run: |
          echo APP_USERNAME=${{ secrets.TEST_ADMIN_EMAIL }} >> $GITHUB_ENV
          echo APP_PASSWORD=${{ secrets.TEST_ADMIN_PASSWORD }} >> $GITHUB_ENV
      - name: Set media path and file name
        run: |
          echo TEST_MEDIA_PATH=$GITHUB_WORKSPACE/test/e2e/ >> $GITHUB_ENV
          echo TEST_FILE_NAME=run_e2e.sh >> $GITHUB_ENV
      - name: Initialize test AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
            aws-access-key-id: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
            aws-region: us-west-2
      - name: Run e2e tests
        run: |
          cd $GITHUB_WORKSPACE
          cd test/e2e
          ./run_e2e.sh
      - name: Initialize build AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.BUILD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.BUILD_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2